import s from "../../styles/Filter.module.scss"
import {useState,useEffect} from "react";
import DropDown from "./DropDown/DropDown";
import Cookies from 'js-cookie';
import CloseIcon from '@mui/icons-material/Close';
import { MainApi } from "../../components/baseApiUrl/baseApiUrl";
import RegDropDown from './../../components/Registration/dropDown/regDropDown';
import { useRouter } from 'next/router'
const Filter = ({page,data,isSearch,setSearchedAd}) => {
    const [searchText,setSearchText] = useState(data?.text)
    const [isFilterOpen, setIsFilterOpen] = useState(false)
    const [isCategoryOpen, setIsCategoryOpen] = useState(false)
    const [isCategoryMobileOpen,setIsCategoryMobileOpen] = useState(false)
    const [categoryArr,setCategoryArr] = useState([])
    const [regionArr,setRegionArr] = useState([])
    const [choosenCategory,setChoosenCategory] = useState()
    const [choosenRegion,setChoosenRegion] = useState()
    const [subCategory,setSubCategory] = useState([])
    const [tegs,setTegs] = useState([])
    const token = Cookies.get('access')
    const getSearched = () => {
        MainApi.getData(token,`adverts/search/${searchText ? `?query=${searchText}` : ""}${
            choosenCategory ? `${!searchText? '?' : '&'}category=${choosenCategory.id}` : ""
          }`).then((res) => {
                setSearchedAd(res.data)
        })
    }
  
    useEffect(() => {
        MainApi.getData(token,'categories/').then((res) => {
            setCategoryArr(res.data)
        })
        MainApi.getData(token,'regions/').then((res) => {
            setRegionArr(res.data)
        })
        MainApi.getData(token,'subcategories/').then((res) => {
            setSubCategory(res.data)
        })

        MainApi.getData(token,'adverts/common_search_queries/').then((res) => {
            setTegs(res.data)
            console.log(res.data)
        })
        if (isSearch) {
            getSearched()
        }
        
    },[isSearch])

    
    const router = useRouter()
    

    const MainCategory = [
        {
            id: 1, title: "Транспорт",
            img: <svg width="42" height="29" viewBox="0 0 42 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M4.84095 7.5637C4.69015 7.83697 4.58822 8.04437 4.54959 8.15461C4.44348 8.48067 4.40112 8.64276 4.36668 8.73291C4.17958 8.68713 3.97247 8.60632 3.80539 8.66004C3.6397 8.7259 3.61037 8.88706 3.41583 8.93798C3.18498 8.98469 2.84522 8.8567 2.61856 8.82493C2.1322 8.74365 1.62582 8.67732 1.13946 8.56475C0.35662 8.38537 0.0843489 7.65292 0.130891 6.91814C0.181622 6.2324 0.878821 6.00538 1.42941 5.92317C1.98047 5.82414 2.73073 5.5775 3.24967 5.89C4.00458 6.35526 3.70672 7.77344 4.84141 7.56464L4.84095 7.5637ZM38.912 24.1993C37.9826 24.1993 37.0927 24.232 36.1861 24.2484C35.8105 24.2568 35.4433 24.2568 35.0677 24.2568C34.2839 24.2568 32.6354 24.3222 31.9261 24.0601C30.7588 23.6668 30.4563 22.1188 30.1379 21.0126C30.2203 20.9879 30.3013 20.9715 30.3911 20.9552C30.5052 20.9384 30.6369 20.9141 30.7677 20.8898C30.8486 20.8814 30.938 20.865 31.0278 20.8487C31.0604 20.8487 31.0851 20.8487 31.1176 20.8407C31.2317 20.8244 31.3625 20.808 31.4849 20.7917H31.5184C31.6399 20.7753 31.7706 20.759 31.9014 20.7426C32.2198 20.7099 32.5544 20.6768 32.9053 20.6525C33.004 20.6525 33.1013 20.6441 33.199 20.6361C33.7296 20.5955 34.2774 20.5623 34.8149 20.546C34.9536 20.538 35.0933 20.5292 35.2324 20.5212H35.534C35.6564 20.5133 35.77 20.5133 35.8924 20.5053H36.1782C37.5749 20.4806 38.7082 20.538 39.0349 20.6529C39.908 20.9804 39.754 21.7834 40.0151 22.6354C40.2757 23.8065 40.0807 24.2003 38.9125 24.2003L38.912 24.1993ZM28.832 22.577C28.4159 23.7486 26.7916 23.593 26.6282 23.593L15.3809 23.6014C15.2254 23.6014 13.5932 23.7649 13.1771 22.5938C12.7452 21.4144 12.0996 19.522 11.8711 18.5799C11.6272 17.5886 10.8267 15.885 15.6094 15.9911C18.0742 16.0401 19.854 16.0401 20.9966 16.0238C22.1476 16.0401 23.9269 16.0401 26.3918 15.9827C31.1674 15.8682 30.3748 17.5718 30.131 18.563C29.902 19.5052 29.2569 21.4055 28.8324 22.577H28.832ZM10.0927 24.076C9.37367 24.3381 7.72469 24.2811 6.94139 24.2811C6.65562 24.2811 6.36985 24.2811 6.09246 24.2727C5.4069 24.2647 4.72226 24.2479 4.02832 24.24C3.71742 24.232 3.41629 24.232 3.09702 24.232C1.93067 24.232 1.7338 23.8387 1.9963 22.6672C2.25647 21.8151 2.0931 21.0126 2.9667 20.6847C3.28598 20.5703 4.3462 20.5207 5.66102 20.5287C5.79971 20.5287 5.94678 20.5287 6.09293 20.5371C6.5267 20.545 6.98281 20.553 7.44823 20.5777C7.72562 20.5857 8.00301 20.6025 8.28087 20.6184C8.38791 20.6184 8.48519 20.6268 8.58292 20.6347C8.73884 20.6427 8.88498 20.6595 9.03159 20.6674C9.17959 20.6754 9.32527 20.6922 9.47327 20.7001C9.62035 20.7165 9.75904 20.7328 9.89681 20.7412C10.109 20.7576 10.3129 20.7819 10.5088 20.8066C10.6401 20.823 10.7704 20.8393 10.8844 20.8557C10.9905 20.872 11.0883 20.8888 11.187 20.8968C11.2349 20.9047 11.2842 20.9127 11.3252 20.9215C11.3913 20.9295 11.4481 20.9463 11.5048 20.9542C11.529 20.9622 11.5537 20.9622 11.57 20.9622C11.6105 20.9701 11.6524 20.9785 11.6924 20.9869C11.7576 21.0033 11.8148 21.0117 11.8721 21.0276C11.5458 22.1337 11.26 23.6818 10.0937 24.0751L10.0927 24.076ZM2.42774 13.1234C2.57481 12.4433 2.72142 12.5418 3.44794 12.5339C4.56635 12.5339 5.64426 12.6404 6.76267 12.837C8.2306 13.0743 9.93683 13.0253 11.3903 13.4597C9.69993 16.4993 7.83965 15.9663 5.6922 15.9663C4.52492 15.9663 2.72142 15.9663 2.42728 14.5491C2.33 14.1557 2.33 13.5658 2.42728 13.1234H2.42774ZM9.06464 1.72841L20.9966 1.3108L32.9053 1.70412C32.9053 1.70412 37.2067 8.42134 36.8809 8.42134C36.57 8.42134 25.8207 7.81501 20.9882 7.92152C16.1646 7.82342 5.4069 8.4461 5.10484 8.4461C4.77904 8.4461 9.06417 1.72841 9.06417 1.72841H9.06464ZM38.5374 12.5087C39.2727 12.5087 39.4189 12.4106 39.566 13.0902C39.6637 13.5326 39.6637 14.1226 39.566 14.5154C39.2727 15.9327 37.4772 15.9327 36.301 15.9327C34.1541 15.9406 32.2933 16.4731 30.6048 13.442C32.0578 13.0076 33.7705 13.0487 35.2329 12.8114C36.3425 12.6068 37.4194 12.5082 38.5374 12.5082V12.5087ZM41.7288 13.0169C41.6883 12.3288 40.0965 10.8541 39.639 10.4038C39.3379 10.1091 38.2763 9.19957 37.9254 8.97021C37.7136 8.83941 37.6722 8.83941 37.6149 8.70815C37.5823 8.60959 37.5423 8.4461 37.4362 8.12659C37.3943 8.01167 37.2975 7.80707 37.1411 7.53661C36.227 5.87365 33.5588 1.73682 33.3377 1.50699C33.0682 1.24494 32.4888 0.720825 31.6571 0.573215C30.8323 0.434012 22.5469 -0.000411987 20.9882 -0.000411987C19.4212 -0.000411987 11.1367 0.450361 10.3124 0.597972C9.48072 0.745583 8.90034 1.26129 8.63924 1.52381C8.4191 1.75317 5.74991 5.89794 4.84467 7.56137C4.68968 7.83977 4.59055 8.04437 4.55006 8.15134C4.44487 8.4788 4.40298 8.64276 4.37134 8.73291C4.32945 8.82306 4.11768 8.97068 4.0367 9.01178C4.01948 9.02813 4.01203 9.03654 4.01203 9.03654C3.78258 9.19209 2.85313 9.82271 2.3542 10.3552C1.59603 11.1582 0.298442 12.362 0.264467 13.0505C0.232818 13.7386 -0.0617931 14.2216 0.0117434 15.5982C0.0359452 16.262 0.224441 18.2772 0.404093 20.1942C0.582814 22.2094 0.779687 24.1181 0.795046 24.2657C0.827625 24.5604 0.729887 24.8883 0.860205 25.142C0.990988 25.404 1.31818 25.4779 1.83247 25.4694C1.99583 25.4694 3.71696 25.4942 6.092 25.5269C11.7403 25.5923 21.0045 25.7152 21.0045 25.7152C21.0045 25.7152 30.5633 25.5759 36.1861 25.4942C38.414 25.4615 40.03 25.4367 40.1771 25.4367C40.6923 25.4367 41.0176 25.3713 41.1568 25.1093C41.2792 24.8552 41.1819 24.5277 41.2145 24.233C41.2391 24.0279 41.5738 20.5791 41.7939 18.0399C41.8912 16.9174 41.9657 15.9756 41.9899 15.5576C42.055 14.1894 41.7613 13.698 41.7278 13.0183L41.7288 13.0169ZM6.09293 26.3453V28.5982C6.09293 28.8112 5.92165 28.9915 5.71035 28.9915L0.803889 29C0.583745 29 0.412005 28.8196 0.412005 28.6066V25.8786C0.837399 26.272 1.45734 26.2883 1.80035 26.2883C1.8078 26.2883 6.08548 26.3458 6.08548 26.3458H6.09246L6.09293 26.3453ZM41.8758 25.4933V28.5651C41.8758 28.786 41.7046 28.9584 41.484 28.9584L36.5784 28.9663C36.3662 28.9663 36.1865 28.786 36.1865 28.573V26.3121C38.5043 26.2794 40.1459 26.2551 40.1775 26.2551C40.562 26.2551 41.4514 26.2551 41.8754 25.4933H41.8758ZM5.65171 22.4079C5.65171 23.2319 4.98709 23.8999 4.16609 23.9013C3.34695 23.9013 2.68 23.2347 2.67907 22.4098C2.67907 21.5858 3.34322 20.9164 4.16609 20.9173C4.98383 20.9164 5.65031 21.5839 5.65171 22.4084V22.4079ZM40.8477 8.52925C40.3618 8.64322 39.8527 8.70955 39.3663 8.79224C39.1396 8.824 38.8017 8.95386 38.5704 8.90668C38.3754 8.85576 38.3452 8.69554 38.1813 8.62921C38.0124 8.57409 37.8067 8.65724 37.62 8.70442C37.5847 8.61379 37.5414 8.44983 37.4357 8.12472C37.3976 8.01494 37.297 7.80848 37.1425 7.53381C38.2772 7.73934 37.9761 6.32489 38.7333 5.85777C39.249 5.54433 39.9993 5.79097 40.5536 5.88813C41.1037 5.96941 41.8014 6.19597 41.8512 6.88124C41.8991 7.61509 41.6273 8.3466 40.8482 8.52925H40.8477ZM8.20966 22.4065C8.21059 22.9932 7.73679 23.4706 7.15036 23.4706C6.56672 23.4706 6.09013 22.9951 6.09106 22.4075C6.0892 21.8184 6.5644 21.3424 7.15036 21.3424C7.73539 21.342 8.21059 21.8179 8.20966 22.4065ZM39.2327 22.3785C39.236 23.2011 38.5709 23.8714 37.7476 23.8714C36.9298 23.8728 36.261 23.2044 36.2601 22.3794C36.2578 21.5578 36.9261 20.8884 37.7457 20.887C38.5676 20.8879 39.2346 21.554 39.2327 22.3785ZM35.675 22.3813C35.6755 22.9703 35.2008 23.4454 34.6162 23.4468C34.0326 23.4463 33.556 22.9708 33.556 22.3836C33.5564 21.7955 34.0293 21.3181 34.6143 21.3186C35.2003 21.3181 35.6746 21.7932 35.6746 22.3813H35.675Z"
                    fill="#FF0000"/>
            </svg>
        },

        {
            id: 2, title: "Недвижимость",
            img: <svg width="32" height="29" viewBox="0 0 32 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M20.6629 14.5C20.9785 15.0335 20.7912 15.7156 20.2446 16.0236C19.698 16.3316 18.999 16.1489 18.6834 15.6154C18.3678 15.0819 18.5551 14.3997 19.1017 14.0917C19.6483 13.7837 20.3473 13.9665 20.6629 14.5Z"
                    fill="#00C7C5"/>
                <path fillRule="evenodd" clipRule="evenodd"
                      d="M15.0759 0.263893C15.6392 -0.0879639 16.3608 -0.0879643 16.9241 0.263892L31.2096 9.18697C32.007 9.68506 32.2398 10.7198 31.7294 11.498C31.219 12.2763 30.1589 12.5034 29.3614 12.0053L27.9998 11.1548L27.9998 24.5385C27.9998 27.0025 25.9532 29 23.4285 29H8.57152C6.04683 29 4.00016 27.0025 4.00016 24.5385V11.1549L2.63856 12.0053C1.84112 12.5034 0.780955 12.2763 0.2706 11.498C-0.239755 10.7198 -0.00703462 9.68506 0.790395 9.18697L15.0759 0.263893ZM21.816 18.68C23.8658 17.5249 24.5681 14.9668 23.3847 12.9663C22.2012 10.9657 19.5801 10.2803 17.5303 11.4353C16.1026 12.2398 15.3286 13.725 15.3902 15.2284L9.77903 18.421C9.66017 18.4887 9.57031 18.5959 9.52594 18.723L8.85038 20.6582C8.73077 21.0008 8.97208 21.3621 9.34155 21.3936L11.9087 21.6125C12.0264 21.6225 12.1444 21.5967 12.2464 21.5386L17.3999 18.6044C18.7006 19.3969 20.3955 19.4804 21.816 18.68Z"
                      fill="#00C7C5"/>
            </svg>

        },

        {
            id: 3, title: "Электроника",
            img: <svg width="16" height="28" viewBox="0 0 16 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M0.61035 25.6981C0.61035 26.9352 1.7472 27.9381 3.1485 27.9381H13.4618C14.8631 27.9381 16 26.9352 16 25.6981V2.24005C16 1.00286 14.8631 0 13.4618 0H3.1485C1.7472 0 0.61035 1.00286 0.61035 2.24005V25.6981Z"
                    fill="#474C55"/>
                <path
                    d="M6.43322 1.52988C6.43322 1.72176 6.57841 1.876 6.756 1.876H9.94619C10.1251 1.876 10.2703 1.72176 10.2703 1.52988C10.2703 1.34164 10.1251 1.18741 9.94619 1.18741H6.756C6.57711 1.18741 6.43322 1.34164 6.43322 1.52988Z"
                    fill="#F4F4F4"/>
                <path
                    d="M2.62475 1.51613C2.62475 1.73449 2.81919 1.91161 3.05771 1.91161C3.29623 1.91161 3.48938 1.73449 3.48938 1.51613C3.48938 1.29776 3.29623 1.12064 3.05771 1.12064C2.81919 1.12064 2.62475 1.29776 2.62475 1.51613Z"
                    fill="#F4F4F4"/>
                <path
                    d="M4.14658 1.51285C4.14269 1.63065 4.2451 1.73145 4.37473 1.73388C4.50566 1.73752 4.61455 1.6428 4.61714 1.52621C4.61973 1.40598 4.51862 1.30761 4.38769 1.30518C4.25677 1.29911 4.14918 1.39262 4.14529 1.51285H4.14658Z"
                    fill="#F4F4F4"/>
                <path
                    d="M4.69621 1.5092C4.69232 1.62943 4.79473 1.7278 4.92435 1.73023C5.05528 1.73387 5.16287 1.63914 5.16676 1.52256C5.17065 1.40233 5.06824 1.30396 4.93732 1.30153C4.80769 1.29788 4.6975 1.38897 4.69491 1.5092H4.69621Z"
                    fill="#F4F4F4"/>
                <path d="M15.3622 24.7583H1.24809V2.78761H15.3622V24.7583Z" fill="#F4F4F4"/>
                <path
                    d="M6.66266 26.8952H9.94748C10.2003 26.8952 10.4064 26.7009 10.4064 26.4654V26.0526C10.4064 25.8182 10.2003 25.6228 9.94748 25.6228H6.66266C6.41118 25.6228 6.20377 25.817 6.20377 26.0526V26.4654C6.20377 26.6997 6.41118 26.8952 6.66266 26.8952Z"
                    fill="#F4F4F4"/>
            </svg>

        },

        {
            id: 4, title: "Дом и сад",
            img: <svg width="50" height="30" viewBox="0 0 50 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M8.66173 24.2686C8.66173 24.2686 6.45676 29.1781 8.0318 29.1781C9.60694 29.1781 11.9688 24.2686 11.9688 24.2686H8.66164H8.66173Z"
                    fill="#EF7F1A"/>
                <path
                    d="M41.2615 24.2686C41.2615 24.2686 43.4662 29.1781 41.8915 29.1781C40.3163 29.1781 37.9542 24.2686 37.9542 24.2686H41.2615Z"
                    fill="#EF7F1A"/>
                <path
                    d="M46.4586 9.27347C41.734 9.27347 43.4197 13.3395 42.522 17.2647C41.5766 21.3935 34.1743 20.9936 33.5447 20.9936C33.093 20.9936 28.4299 20.9936 25.8283 20.9936C25.8283 20.9936 25.1218 20.9936 24.0955 20.9936C21.4933 20.9936 16.8307 20.9936 16.3786 20.9936C15.7489 20.9936 8.3463 21.3935 7.40145 17.2647C6.5034 13.3395 8.18897 9.27347 3.46483 9.27347C0 9.27347 0 12.8693 0 12.8693C0 22.4588 4.56709 23.3913 5.82685 24.1903C6.85108 24.8399 19.4246 25.0491 24.0955 25.1049V25.1226C24.0955 25.1226 24.4117 25.1205 24.9615 25.1148C25.5116 25.1205 25.8283 25.1226 25.8283 25.1226V25.1049C30.4985 25.0491 43.0722 24.8399 44.0963 24.1903C45.3559 23.3913 49.9233 22.4589 49.9233 12.8693C49.9233 12.8693 49.9233 9.27347 46.4585 9.27347H46.4586Z"
                    fill="#EF7F1A"/>
                <path
                    d="M46.3781 9.11618C46.4887 7.75818 46.3936 6.06102 44.2508 3.84959C41.0793 0.575663 26.912 -0.0856055 24.9561 0.00836692C23.0008 -0.0856055 8.83406 0.575663 5.6624 3.84959C3.51922 6.0611 3.42422 7.75818 3.53432 9.11618C7.68367 9.15561 6.78055 12.4088 7.19225 15.8936H42.7201C43.1325 12.4088 42.229 9.15561 46.3782 9.11618H46.3781Z"
                    fill="#EF7F1A"/>
                <path
                    d="M7.39636 17.2647C8.34156 21.3935 15.7434 20.9936 16.3737 20.9936C16.8253 20.9936 21.4882 20.9936 24.0902 20.9936C25.1163 20.9936 25.8224 20.9936 25.8224 20.9936C28.4244 20.9936 33.0875 20.9936 33.5397 20.9936C34.1689 20.9936 41.571 21.3935 42.5165 17.2647C42.5774 16.9987 42.6254 16.7324 42.6655 16.466H7.24756C7.28733 16.7323 7.33581 16.9987 7.39636 17.2647Z"
                    fill="#FECC00"/>
            </svg>

        },

        {
            id: 5, title: "Услуги",
            img: <svg width="28" height="29" viewBox="0 0 28 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M22.3329 24.9196C21.9008 24.6037 21.7418 24.028 21.9779 23.6326L23.0505 21.8406C23.2875 21.4452 23.8291 21.3813 24.2612 21.6962L27.3859 23.9795C27.5249 22.3523 26.8844 20.51 25.5157 19.0514C25.1911 18.7064 24.8437 18.4011 24.4801 18.1375C24.4763 18.1336 24.4735 18.1317 24.4697 18.1288C24.2527 17.9476 24.0157 17.807 23.7787 17.6966C23.535 17.5841 23.2799 17.5153 23.0325 17.4795V17.4785C22.8583 17.464 22.7098 17.4397 22.549 17.4484C22.1026 17.4223 21.4525 17.3738 21.0585 17.306C20.4131 17.1936 19.5413 16.7594 19.5413 16.7594L15.5638 12.5194L15.5714 12.5116L11.6529 8.32391C11.6529 8.32391 10.7896 7.2937 10.7106 6.23152C10.6326 5.1703 10.6468 4.32617 10.6468 4.32617H10.6459C10.663 3.80768 10.5107 3.2572 10.2109 2.76584C10.032 2.47316 9.81022 2.21052 9.53134 1.97695C9.53134 1.97695 9.53134 1.97695 9.53039 1.97695C7.57066 0.0018278 4.84284 -0.541865 2.96876 0.565872L6.09158 2.855C6.52369 3.17191 6.68169 3.74856 6.44469 4.14397L5.37013 5.93399C5.13313 6.3294 4.59061 6.39336 4.1585 6.07548L1.03759 3.78926C0.89672 5.41646 1.53442 7.25881 2.90023 8.72029C3.22384 9.06725 3.57125 9.37253 3.93388 9.63614C3.93768 9.64001 3.94054 9.64292 3.94435 9.64583C4.16135 9.82706 4.39835 9.96759 4.63535 10.0781C4.87805 10.1905 5.13313 10.2603 5.3806 10.2981C5.55477 10.3126 5.70325 10.3368 5.86315 10.3291C6.31049 10.3572 6.95961 10.4037 7.3527 10.4745C7.99801 10.5869 8.8689 11.022 8.8689 11.022L12.8445 15.2727L12.8369 15.2805L16.7611 19.4633C16.7611 19.4633 17.6254 20.4925 17.7063 21.5538C17.7862 22.6159 17.7729 23.4601 17.7729 23.4601L17.7738 23.4581C17.7577 23.9776 17.9099 24.5261 18.2107 25.0185C18.3896 25.3112 18.6124 25.5738 18.8912 25.8064C18.8912 25.8064 18.8912 25.8064 18.8922 25.8083C20.8557 27.7786 23.5836 28.3194 25.4557 27.2078L22.3291 24.9235L22.3329 24.9196Z"
                    fill="#474C55"/>
                <path
                    d="M22.3348 0.258636L22.0912 0.485417L20.0677 2.40142C19.4776 2.95675 19.3091 3.69039 19.4728 4.30386L10.408 15.1273L11.6548 16.2166L20.7311 5.37865C21.3573 5.43874 22.0569 5.14993 22.5004 4.49866L23.9748 2.11843L24.1508 1.8335L22.3358 0.258636H22.3348Z"
                    fill="#E5E9FF"/>
                <path
                    d="M10.5745 14.9238L9.75599 14.2134C9.56468 14.0467 9.2563 14.071 9.05261 14.3152L8.95839 14.4276C8.94697 14.4412 8.94221 14.4596 8.93174 14.4741C8.92793 14.479 8.92793 14.4867 8.92412 14.4916C8.91746 14.5013 8.9127 14.5119 8.90794 14.5216C8.90413 14.5274 8.90128 14.5342 8.89747 14.54C8.89271 14.5488 8.88891 14.5565 8.8851 14.5652C8.88129 14.572 8.87749 14.5798 8.87368 14.5875C8.87273 14.5885 8.87273 14.5904 8.87177 14.5914C8.86131 14.6156 8.85179 14.6389 8.84417 14.6631C8.84322 14.6641 8.84227 14.666 8.84132 14.6689C8.83751 14.6815 8.8337 14.6932 8.83085 14.7048C8.83085 14.7058 8.8299 14.7087 8.8299 14.7096C8.82799 14.7155 8.82704 14.7222 8.82609 14.728L8.81467 14.7416C8.81372 14.7455 8.79849 14.7658 8.80039 14.7668L8.68713 14.6689C8.57958 14.5749 8.40825 14.5788 8.29309 14.7155L0.723514 23.7654C-0.175926 24.8411 -0.255876 26.3743 0.591215 27.1089L1.58108 27.9666C2.42817 28.7003 3.89392 28.3717 4.79431 27.296L12.3639 18.2461C12.4781 18.1084 12.461 17.9417 12.3534 17.8487L12.1897 17.7072L12.1888 17.7062C12.1926 17.7101 12.2173 17.6859 12.2268 17.682C12.2306 17.6791 12.2392 17.6723 12.243 17.6714C12.2525 17.6665 12.2649 17.6588 12.2744 17.6539C12.2792 17.651 12.2849 17.6471 12.2896 17.6452C12.3011 17.6384 12.3134 17.6307 12.3249 17.6239C12.3344 17.6171 12.3439 17.6113 12.3534 17.6035C12.3591 17.5996 12.3648 17.5948 12.3705 17.5909C12.3782 17.5841 12.3867 17.5783 12.3943 17.5725C12.4001 17.5677 12.4048 17.5628 12.4096 17.5589C12.4181 17.5512 12.4267 17.5425 12.4343 17.5347C12.4381 17.5308 12.4334 17.5182 12.4372 17.5144C12.4495 17.5018 12.4524 17.4804 12.4638 17.4669L12.5581 17.3544C12.7494 17.1267 12.7646 16.8592 12.6075 16.6886L12.1202 16.2632L11.8242 16.0064L11.8252 16.0054L10.5783 14.9151L10.5736 14.9219L10.5745 14.9238Z"
                    fill="#ED6C57"/>
                <path
                    d="M2.00467 25.4313C1.7772 25.7037 1.41457 25.7696 1.20041 25.5835C0.98626 25.3974 0.991971 25.0223 1.21945 24.751L8.11706 16.5045C8.34454 16.2331 8.70717 16.1682 8.92132 16.3533C9.13547 16.5384 9.12881 16.9135 8.90229 17.1848L2.00467 25.4313Z"
                    fill="#474C55"/>
                <path
                    d="M3.7702 26.9626C3.54272 27.2349 3.19246 27.3115 2.97831 27.1254C2.76415 26.9403 2.78224 26.5759 3.00972 26.3036L9.90733 18.0571C10.1348 17.7857 10.4851 17.7101 10.6992 17.8962C10.9134 18.0813 10.8953 18.4457 10.6678 18.718L3.7702 26.9635V26.9626Z"
                    fill="#474C55"/>
            </svg>

        },

        {
            id: 6, title: "Работа",
            img: <svg width="31" height="28" viewBox="0 0 31 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M21.3384 5.32996C21.3384 5.72936 21.0106 6.05178 20.606 6.05178H19.183C18.7787 6.05178 18.4509 5.72971 18.4509 5.32996V4.77305C18.4509 4.37365 18.7787 4.04947 19.183 4.04947H20.606C21.0102 4.04947 21.3384 4.3733 21.3384 4.77305V5.32996Z"
                    fill="#2F3C50"/>
                <path
                    d="M12.2674 5.32996C12.2674 5.72936 11.9397 6.05178 11.5354 6.05178H10.1124C9.70815 6.05178 9.38037 5.72971 9.38037 5.32996V4.77305C9.38037 4.37365 9.70815 4.04947 10.1124 4.04947H11.5354C11.9397 4.04947 12.2674 4.3733 12.2674 4.77305V5.32996Z"
                    fill="#2F3C50"/>
                <path
                    d="M0.000366211 14.9312V26.0913C0.000366211 26.8677 0.637688 27.4979 1.42406 27.4979H29.2968C30.0828 27.4979 30.7205 26.8677 30.7205 26.0913V14.9312C26.1087 16.5162 20.889 17.4106 15.3601 17.4106C9.83149 17.4106 4.61174 16.5165 0.000366211 14.9312H0.000366211Z"
                    fill="#2F3C50"/>
                <path
                    d="M29.2964 5.33243H1.4237C0.637679 5.33243 0 5.96224 0 6.73901V15.2922C4.61138 16.8779 9.83113 17.7712 15.3597 17.7712C20.8886 17.7712 26.108 16.8775 30.7201 15.2922V6.73901C30.7201 5.96224 30.0824 5.33243 29.2964 5.33243Z"
                    fill="#272625"/>
                <path
                    d="M29.2964 4.9707H1.4237C0.637679 4.9707 0 5.60087 0 6.37834V14.9309C4.61138 16.5158 9.83113 17.4102 15.3597 17.4102C20.8886 17.4102 26.108 16.5162 30.7201 14.9309V6.37834C30.7201 5.60052 30.0824 4.9707 29.2964 4.9707Z"
                    fill="#3B495C"/>
                <path
                    d="M11.627 4.12189L11.6273 4.11836L11.899 1.69411C11.9051 1.61605 11.9837 1.41152 12.1867 1.41152H18.5328C18.7608 1.41152 18.8148 1.61569 18.8212 1.69411L19.0925 4.11836L19.0933 4.12189H20.6646V4.12083L20.3343 1.55211C20.2235 0.695165 19.4961 0 18.7083 0H12.0116C11.2238 0 10.4971 0.695165 10.3863 1.55211L10.0557 4.12083V4.12189H11.627Z"
                    fill="#3A5164"/>
                <path
                    d="M16.8327 14.7228H13.8877C13.6665 14.7228 13.4867 14.9005 13.4867 15.1188V19.2732C13.4867 19.4918 13.6665 19.6702 13.8877 19.6702H16.8327C17.0536 19.6702 17.2334 19.4918 17.2334 19.2732V15.1188C17.2334 14.9005 17.0536 14.7228 16.8327 14.7228Z"
                    fill="#FED35D"/>
            </svg>


        },


    ]
    const search = () => {
       if(!isSearch) {
        router.push({pathname : '/search' , query:{
            text : searchText,
            category : choosenCategory?.id,
            region : choosenRegion?.id,
        } })
       }
    }
    const dropDownArr = [
        {id: 1, title: "Фильтр1",},
        {id: 2, title: "Фильтр2",},
        {id: 3, title: "Фильтр3",},
        {id: 4, title: "Фильтр4",},
        {id: 5, title: "Фильтр5",},
    ]


    const openModal = (type) => {
        if (type === "filter"){
            setIsCategoryOpen(false)
            setIsFilterOpen(!isFilterOpen)
        } else {
            setIsCategoryOpen(!isCategoryOpen)
            setIsFilterOpen(false)
        }
    }
   const enterPressed = (event) => {
        const code = event.keyCode || event.which;
        if(code === 13) { 
            if (!isSearch) {
                search()
            }
           else {
            getSearched()
           }
        } 
    }
    return (
        <div >
            <div className={s.filter}>
                <div className={s.wrap}>
                    {!isSearch && (
                        <div className={s.category} onClick={() => {openModal("Category")}}>
                        Все категории
                        <svg width="29" height="19" viewBox="0 0 29 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect width="29" height="3" fill="#2C52A5"/>
                            <rect y="8" width="29" height="3" fill="#2C52A5"/>
                            <rect y="16" width="29" height="3" fill="#2C52A5"/>
                        </svg>
                    </div>
                    )}
                    <div className={s.input}>
                        <input onKeyPress={(e) => enterPressed(e)} value={searchText} onChange={(e) => setSearchText(e.target.value)} type="text" placeholder={"Поиск по объявлениям..."}/>
                        <span onClick={!isSearch? search :getSearched}>
                            <svg width="19" height="19" viewBox="0 0 19 19" fill="none"
                                 xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M12.75 12.75L17.3333 17.3333M14.5833 8.16667C14.5833 11.7105 11.7105 14.5833 8.16667 14.5833C4.62284 14.5833 1.75 11.7105 1.75 8.16667C1.75 4.62284 4.62284 1.75 8.16667 1.75C11.7105 1.75 14.5833 4.62284 14.5833 8.16667Z"
                                stroke="#5855EE" strokeWidth="1.87234" strokeLinecap="round" strokeLinejoin="round"/>
                            </svg>

                        </span>
                    </div>
                    <div className={s.filterIcon}>
                        <span onClick={() => {
                            openModal("filter")
                        }}>
                            <svg width="50" height="50" viewBox="0 0 50 50"
                                 style={{fill: `${isFilterOpen ? "#2C52A5" : "none"}`}}
                                 xmlns="http://www.w3.org/2000/svg">
                                <rect x="0.5" y="0.5" width="49" height="49" rx="9.5" stroke="#2C52A5"/>
                                <path d="M37.2093 18.0232H30.2325"
                                      style={{stroke: `${isFilterOpen ? "#fff" : "#2C52A5"}`}} strokeWidth="1.5"
                                      strokeMiterlimit="10" strokeLinecap="round"
                                      strokeLinejoin="round"/>
                                <path d="M18.6047 18.0232H13.9535"
                                      style={{stroke: `${isFilterOpen ? "#fff" : "#2C52A5"}`}} strokeWidth="1.5"
                                      strokeMiterlimit="10" strokeLinecap="round"
                                      strokeLinejoin="round"/>
                                <path
                                    d="M23.2558 22.093C25.5035 22.093 27.3256 20.2709 27.3256 18.0232C27.3256 15.7756 25.5035 13.9535 23.2558 13.9535C21.0081 13.9535 19.186 15.7756 19.186 18.0232C19.186 20.2709 21.0081 22.093 23.2558 22.093Z"
                                    style={{stroke: `${isFilterOpen ? "#fff" : "#2C52A5"}`}} strokeWidth="1.5"
                                    strokeMiterlimit="10" strokeLinecap="round"
                                    strokeLinejoin="round"/>
                                <path d="M37.2093 30.8139H32.5581"
                                      style={{stroke: `${isFilterOpen ? "#fff" : "#2C52A5"}`}} strokeWidth="1.5"
                                      strokeMiterlimit="10" strokeLinecap="round"
                                      strokeLinejoin="round"/>
                                <path d="M20.9302 30.8139H13.9535"
                                      style={{stroke: `${isFilterOpen ? "#fff" : "#2C52A5"}`}} strokeWidth="1.5"
                                      strokeMiterlimit="10" strokeLinecap="round"
                                      strokeLinejoin="round"/>
                                <path
                                    d="M27.907 34.8837C30.1547 34.8837 31.9768 33.0616 31.9768 30.8139C31.9768 28.5663 30.1547 26.7442 27.907 26.7442C25.6594 26.7442 23.8373 28.5663 23.8373 30.8139C23.8373 33.0616 25.6594 34.8837 27.907 34.8837Z"
                                    style={{stroke: `${isFilterOpen ? "#fff" : "#2C52A5"}`}} strokeWidth="1.5"
                                    strokeMiterlimit="10" strokeLinecap="round"
                                    strokeLinejoin="round"/>
                            </svg>

                        </span>
                    </div>
                </div>

                {/*filterModals*/}
                <div className={s.filterMenu} style={{display: `${isFilterOpen ? "block" : "none"}`}}>
                    <div className={s.filterContent}>
                        <div className={s.filterMenuItems}>
                            <RegDropDown current={{name :'Выберите Категорию'}} setInfo={setChoosenCategory} arr={categoryArr} mainTitle={"Категория"}/>
                            <RegDropDown current={{name : 'Выберите Местоположение'}} setInfo={setChoosenRegion} arr={regionArr} mainTitle={"Местоположение"}/>
                            <RegDropDown arr={dropDownArr} mainTitle={"Сортировка"}/>
                        </div>
                        <div onClick={() => {
                            if(!isSearch) {
                                search()
                                setIsFilterOpen(false)
                            } 
                                
                                else getSearched()
                                setIsFilterOpen(false)
                            

                        }} className={s.btn}>
                            показать
                        </div>
                    </div>
                </div>

                <div className={s.filterMenu} style={{display: `${isCategoryOpen ? "block" : "none"}`}}>
                    <div className={s.filterContent}>
                        <div className={s.categoryTitle}>
                            Сдаётся всё!
                        </div>
                        <div className={s.categoryWrap}>
                            {subCategory.length && subCategory.map(e =>
                                <p onClick={() => {
                                    if(!isSearch) {
                                        router.push({
                                            pathname : '/search',
                                            query : {
                                                subcategory : e.id
                                            }
                                        })
                                    }
                                    else {
                                        getSearched()
                                    }
                                }}  key={e.id}>{e.name}</p>
                            )}
                        </div>
                    </div>
                </div>

                <div className={s.tegs}>
                    {!searchText &&  tegs.length && tegs.map(e => <div onClick={() => setSearchText(e.query)} className={s.teg} key={e.id}>
                        {e.query}
                    </div>)}
                </div>
                {page === "main" &&
                    <div className={s.subCategory}>
                        {MainCategory.map(e => <div onClick={() =>{
                            if (!isSearch) {
                                router.push({
                                    pathname : '/search',
                                    query : {
                                        category : e.id
                                    }
                                })
                            }
                        }} className={s.subCategoryItem} key={e.id}>
                            {e.img}
                            <div  className={s.subCategoryTitle}>
                                {e.title}
                            </div>
                        </div>)}
                    </div>
                }
                   {!isSearch && (
                     <div className={s.MobileCategory} onClick={() => {setIsCategoryMobileOpen(true)}}>
                     Все категории
                     <svg width="29" height="19" viewBox="0 0 29 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                         <rect width="29" height="3" fill="#2C52A5"/>
                         <rect y="8" width="29" height="3" fill="#2C52A5"/>
                         <rect y="16" width="29" height="3" fill="#2C52A5"/>
                     </svg>
                 </div>
                   )}
            </div>
            <div style={{'transform': !isCategoryMobileOpen ? 'translateX(-150%)' : 'translateX(0)', 'transition' : 'all, 0.3s'}} className={s.MobileCategoryContainer}>
                <div className = {s.titleContainer}>
                    <p className={s.title}>
                        Все категории
                    </p>
                    <CloseIcon onClick = {() => setIsCategoryMobileOpen(false)}/>
                </div>
                <div className = {s.ItemsContainer}>

                    {!isSearch && subCategory.length && subCategory.map(e =>
                                <div onClick={() => {
                                    if(!isSearch) {
                                        router.push({
                                            pathname : '/search',
                                            query : {
                                                subcategory : e.id
                                            }
                                        })
                                    }
                                }}  key={e.id}>
                                    <p >{e.name}</p>
                                </div>
                            )}
                </div>
            </div>
        </div>
    );
};

export default Filter;